let notesElement=document.getElementById("notes"),scale=1,isMove=!1,isResize=!1,isModalOpen=!1,isErrorDialogOpen=!1,currentX=100,currentY=100,endX,endY,sourceElement=undefined,selectedElement=undefined,pointers=[],pointerDiff=0,updateSend=new Date,coordinateAdjustX=0,coordinateAdjustY=0;const showErrorDialog=()=>{if(!isErrorDialogOpen){isErrorDialogOpen=!0;const n=document.getElementById("errorModal"),t=new bootstrap.Modal(n);t.show()}},generateId=()=>{try{const n=window.crypto.getRandomValues(new Uint32Array(4));return n[0].toString(16)+"-"+n[1].toString(16)+"-"+n[2].toString(16)+"-"+n[3].toString(16)}catch(n){return console.log("Secure random number generation is not supported."),Math.floor(Math.random()*1e10).toString()}},getId=()=>{let n=document.location.hash.replace("#","");return n.length===0&&(n=generateId(),document.location.hash=n),document.querySelector('meta[property="og:url"]').setAttribute("content",document.location.href),n};let id=getId();console.log(id);window.addEventListener("hashchange",n=>{n.oldURL.indexOf("#")!=-1&&(console.log("hashchange event occured!"),connection.invoke("Leave",id).then(function(){console.log("Leave called");id=getId();console.log(id);const n=document.getElementsByClassName("stickynote");while(n.length>0)notesElement.removeChild(n[0]);selectedElement=selectedElement=undefined;pointers=[];scale=1;isMove=!1;isResize=!1;isModalOpen=!1;coordinateAdjustX=coordinateAdjustY=0;connection.invoke("Join",id)}).catch(function(n){console.log("Leave error");console.log(n);showErrorDialog()}))});const deSelectNotes=()=>{const n=document.getElementsByClassName("selected");while(n.length>0)n[0].classList.remove("selected")},pointerDown=n=>{if(!isModalOpen){pointers.push(n);currentX=n.clientX/scale;currentY=n.clientY/scale;const t=n.srcElement.offsetWidth,i=n.srcElement.offsetHeight;n.ctrlKey||deSelectNotes();selectedElement=sourceElement=n.srcElement;sourceElement.className="stickynote selected";isResize=n.offsetX>=t*.7&&n.offsetY>=i*.6;n.stopPropagation()}},convertElementToNote=n=>{const t=n.offsetLeft,i=n.offsetTop,r=Math.floor(n.style.zIndex),u=Math.floor(n.style.width.replace("px","")),f=Math.floor(n.style.height.replace("px","")),e=Math.floor(n.style.transform.replace("rotateZ(","").replace("deg)",""));return{id:n.id,text:n.innerText,color:n.style.backgroundColor,position:{x:t+coordinateAdjustX,y:i+coordinateAdjustY,z:r,rotation:e},width:u,height:f}},updateNoteElementsToServer=n=>{let t=[];for(let i=0;i<n.length;i++){const r=n[i];let u=convertElementToNote(r);t.push(u)}connection.invoke("UpdateNotes",id,t).then(function(){console.log("updateNoteMove called")}).catch(function(n){console.log("updateNoteMove error");console.log(n);showErrorDialog()})},pointerMove=n=>{if(n.stopPropagation(),!isModalOpen){const t=n.clientX/scale,i=n.clientY/scale;for(let t=0;t<pointers.length;t++)if(pointers[t].pointerId==n.pointerId){pointers[t]=n;break}if(pointers.length>1){if(pointers.length===2){const n=Math.abs(pointers[0].clientX-pointers[1].clientX),t=Math.abs(pointers[0].clientY-pointers[1].clientY),i=Math.sqrt(n*n+t*t);if(pointerDiff>0){const e=pointerDiff-i,o=scale;scale+=e*-.01;scale=Math.min(Math.max(.1,scale),10);notesElement.style.transform=`scale(${scale})`;const t=o-scale,r=document.documentElement.clientWidth/scale/2,s=document.documentElement.clientHeight/scale/2,n=Math.floor(r*t),u=Math.floor(s*t);console.table({centerX:r,correctionX:n,scaleChange:t,correctionX:n,scale});coordinateAdjustX-=n;coordinateAdjustY-=u;const f=document.getElementsByClassName("stickynote");for(let t=0;t<f.length;t++){const i=f[t];i.style.left=`${i.offsetLeft+n}px`;i.style.top=`${i.offsetTop+u}px`}}pointerDiff=i}return}if(endX=currentX-t,endY=currentY-i,currentX=t,currentY=i,sourceElement===undefined){if(isMove){coordinateAdjustX+=endX;coordinateAdjustY+=endY;const n=document.getElementsByClassName("stickynote");for(let t=0;t<n.length;t++){const i=n[t];i.style.left=`${i.offsetLeft-endX}px`;i.style.top=`${i.offsetTop-endY}px`}}return}if(isResize){const n=Math.floor(sourceElement.style.width.replace("px","")),t=Math.floor(sourceElement.style.height.replace("px",""));sourceElement.style.width=`${n-endX}px`;sourceElement.style.height=`${t-endY}px`;new Date-updateSend>80&&(updateNoteElementsToServer([sourceElement]),updateSend=new Date)}else{const n=document.getElementsByClassName("selected");for(let t=0;t<n.length;t++){const i=n[t];i.style.left=`${i.offsetLeft-endX}px`;i.style.top=`${i.offsetTop-endY}px`}new Date-updateSend>80&&(updateNoteElementsToServer(n),updateSend=new Date)}}},pointerUp=n=>{isMove=!1;for(let t=0;t<pointers.length;t++){const i=pointers[t];if(i.pointerId==n.pointerId){pointers.splice(t,1);break}}if(sourceElement!==undefined){const n=document.getElementsByClassName("selected");updateNoteElementsToServer(n)}sourceElement=undefined;n.stopPropagation()};window.addEventListener("pointermove",pointerMove,{passive:!0});window.addEventListener("pointerup",pointerUp);window.addEventListener("wheel",n=>{if(n.stopPropagation(),!isModalOpen){const e=scale;scale+=n.deltaY*-.001;scale=Math.min(Math.max(.1,scale),10);notesElement.style.transform=`scale(${scale})`;const i=e-scale,r=n.clientX/scale,o=n.clientY/scale,t=Math.floor(r*i),u=Math.floor(o*i);console.table({centerX:r,correctionX:t,scaleChange:i,correctionX:t,scale});coordinateAdjustX-=t;coordinateAdjustY-=u;const f=document.getElementsByClassName("stickynote");for(let n=0;n<f.length;n++){const i=f[n];i.style.left=`${i.offsetLeft+t}px`;i.style.top=`${i.offsetTop+u}px`}}});let protocol=new signalR.JsonHubProtocol,hubRoute="Notes",connection=(new signalR.HubConnectionBuilder).withUrl(hubRoute).withAutomaticReconnect().withHubProtocol(protocol).build();const editNoteMenu=(n,t)=>{const i=document.getElementById("colorModal"),r=document.getElementById("noteText"),u=document.getElementById("noteColor"),f=document.getElementById("updateNoteSaveButton"),e=()=>{h.hide();const i=r.value!==n.innerText;if(t.text=n.innerText=r.value,t.color=n.style.backgroundColor=u.value,i){console.log("Re-calculate the size due to text update");const i=calculateNoteSize(t.text);n.style.width=`${i.width}px`;n.style.height=`${i.height}px`}updateNoteElementsToServer([n])},o=()=>{isModalOpen=!0,r.focus()},s=()=>{isModalOpen=!1,f.removeEventListener("click",e),i.removeEventListener("shown.bs.modal",o),i.removeEventListener("hidden.bs.modal",s)};f.addEventListener("click",e);i.addEventListener("shown.bs.modal",o);i.addEventListener("hidden.bs.modal",s);r.value=t.text;u.value=t.color;const h=new bootstrap.Modal(i);h.show()},createOrUpdateNoteElement=(n,t)=>{n.id=t.id,n.innerText=t.text,n.className="stickynote",n.style.backgroundColor=t.color,n.style.left=`${t.position.x}px`,n.style.top=`${t.position.y}px`,n.style.zIndex=t.position.z,n.style.transform=`rotateZ(${t.position.rotation}deg)`,n.style.width=`${t.width}px`,n.style.height=`${t.height}px`,n.addEventListener("pointerdown",pointerDown,{passive:!0}),n.addEventListener("dblclick",()=>{pointers=[],editNoteMenu(n,t)}),n.addEventListener("contextmenu",i=>{pointers=[];i.preventDefault();i.stopPropagation();isModalOpen=!0;const r=document.getElementById("noteMenuModal"),f=document.getElementById("noteMenuEditNote"),e=document.getElementById("noteMenuDeleteNote");let o=!1;const s=()=>{u.hide(),o=!0,isModalOpen=!1,editNoteMenu(n,t)},h=()=>{u.hide(),console.log(t.id),confirm("Do you really want to delete this note?")&&(connection.invoke("DeleteNotes",id,[t.id]).then(function(){console.log("DeleteNotes called")}).catch(function(n){console.log("DeleteNotes error");console.log(n)}),notesElement.removeChild(n))},c=()=>{o||(isModalOpen=!1),f.removeEventListener("click",s),e.removeEventListener("click",h),r.removeEventListener("hidden.bs.modal",c)};f.addEventListener("click",s);e.addEventListener("click",h);r.addEventListener("hidden.bs.modal",c);const u=new bootstrap.Modal(r);u.show()})},calculateNoteSize=n=>{let t=100,r=100;const i=n.split(/\r\n|\r|\n/);for(let n=0;n<i.length;n++){const u=i[n];let r=u.length*16;t<r&&(t=r)}return r=Math.max(100,32*i.length),console.log({lines:i.length,height:r,width:t}),{width:t,height:r}},addNote=(n,t)=>{const r=calculateNoteSize(n);let u={id:generateId(),text:n,color:t,position:{x:currentX-100+200*Math.random(),y:currentY-100+200*Math.random(),z:100,rotation:Math.floor(Math.random()*8)-4},width:r.width,height:r.height},i=document.createElement("div");createOrUpdateNoteElement(i,u);notesElement.insertBefore(i,notesElement.firstChild);updateNoteElementsToServer([i])},deleteAllNotesByClassFilter=(n,t)=>{const i=document.getElementsByClassName(n);let r=[];while(i.length>0)r.push(i[0].id),notesElement.removeChild(i[0]);t&&connection.invoke("DeleteNotes",id,r).then(function(){console.log("DeleteNotes by filter called")}).catch(function(n){console.log("DeleteNotes by filter error");console.log(n);showErrorDialog()});selectedElement=undefined},showNoteDialog=()=>{if(isMove=!1,pointers=[],!isModalOpen){isModalOpen=!0;const t=document.getElementById("colorModal"),n=document.getElementById("noteText"),i=document.getElementById("noteColor"),u=document.getElementById("updateNoteSaveButton");n.value="";i.value="lightyellow";let r=[];const f=()=>{n.value.length!==0?(r.push({text:n.value,color:i.value}),n.value="",i.value="lightyellow",n.focus()):s.hide()},e=()=>{n.focus()},o=()=>{isModalOpen=!1;u.removeEventListener("click",f);t.removeEventListener("shown.bs.modal",e);t.removeEventListener("hidden.bs.modal",o);for(let n=0;n<r.length;n++){const t=r[n];addNote(t.text,t.color)}};u.addEventListener("click",f);t.addEventListener("shown.bs.modal",e);t.addEventListener("hidden.bs.modal",o);const s=new bootstrap.Modal(t);s.show()}};window.addEventListener("focus",()=>{connection.state==="Disconnected"&&startConnection()});window.addEventListener("blur",()=>{});window.addEventListener("pointerdown",n=>{isModalOpen||(deSelectNotes(),pointerDiff=0,pointers.push(n),currentX=n.clientX/scale,currentY=n.clientY/scale,isMove=!0)});window.addEventListener("contextmenu",n=>{if(n.preventDefault(),sourceElement===undefined){isModalOpen=!0;const n=document.getElementById("menuModal"),i=document.getElementById("menuAddNotes"),r=document.getElementById("menuRemoveAllNotes");let u=!1;const f=()=>{t.hide(),u=!0,isModalOpen=!1,showNoteDialog()},e=()=>{t.hide(),confirm("Do you really want to delete all notes?")&&deleteAllNotesByClassFilter("stickynote",!0)},o=()=>{u||(isModalOpen=!1),i.removeEventListener("click",f),r.removeEventListener("click",e),n.removeEventListener("hidden.bs.modal",o)};i.addEventListener("click",f);r.addEventListener("click",e);n.addEventListener("hidden.bs.modal",o);const t=new bootstrap.Modal(n);t.show()}});connection.onclose(n=>{console.log(`onclose: ${n}`)});const startConnection=()=>{connection.start().then(function(){connection.invoke("Join",id)}).catch(function(n){console.log(n);showErrorDialog()})},zoomOut=n=>{deleteAllNotesByClassFilter("stickynote",!1);let t=9999999999,o=-9999999999,i=9999999999,s=-9999999999;for(let r=0;r<n.length;r++){const u=n[r];u.position.x<t&&(t=u.position.x);u.position.x+u.width>o&&(o=u.position.x+u.width);u.position.y<i&&(i=u.position.y);u.position.y+u.height>s&&(s=u.position.y+u.height)}const f=Math.abs(o-t)+40,e=Math.abs(s-i)+40,r=document.documentElement.clientWidth/f,u=document.documentElement.clientHeight/e;r<1&&r<u?(console.log("scale x axes: "+r),scale=r,coordinateAdjustX=t-20-(document.documentElement.clientWidth-f*scale)/2,coordinateAdjustY=i-20-(document.documentElement.clientHeight-e*scale)/2):u<1&&u<=r?(console.log("scale y axes: "+u),scale=u,coordinateAdjustX=t-20-(document.documentElement.clientWidth-f*scale)/2,coordinateAdjustY=i-20-(document.documentElement.clientHeight-e*scale)/2):(console.log("no scale required, centering"),scale=1,coordinateAdjustX=t-document.documentElement.clientWidth/2+f/2,coordinateAdjustY=i-document.documentElement.clientHeight/2+e/2);for(let t=0;t<n.length;t++){const i=n[t];i.position.x-=coordinateAdjustX;i.position.y-=coordinateAdjustY;const r=document.createElement("div");createOrUpdateNoteElement(r,i);notesElement.insertBefore(r,notesElement.firstChild)}notesElement.style.transform=`scale(${scale})`};connection.on("AllNotes",n=>{console.log("Notes:"),console.log(n),zoomOut(n)});connection.on("UpdateNotes",n=>{console.log("UpdateNotes:");console.log(n);for(let t=0;t<n.length;t++){const r=n[t];r.position.x-=coordinateAdjustX;r.position.y-=coordinateAdjustY;let i=document.getElementById(r.id);i===undefined||i==null?(i=document.createElement("div"),createOrUpdateNoteElement(i,r),notesElement.insertBefore(i,notesElement.firstChild)):createOrUpdateNoteElement(i,r)}});connection.on("DeleteNotes",n=>{console.log("DeleteNotes:");console.log(n);for(let t=0;t<n.length;t++){const r=n[t],i=document.getElementById(r);i&&notesElement.removeChild(i)}});document.addEventListener("keyup",n=>{if(n.key==="Escape")deSelectNotes(),selectedElement=undefined;else if(!isModalOpen)if(n.ctrlKey&&n.key==="c"){const n=document.getElementsByClassName("selected"),t=[];for(let i=0;i<n.length;i++){const r=n[i];t.push(convertElementToNote(r))}sessionStorage.setItem("copy",JSON.stringify(t))}else if(n.ctrlKey&&n.key==="v"){const t=sessionStorage.getItem("copy");console.log(t);const n=JSON.parse(t);if(n!==undefined&&n.length!==undefined){const t=[];for(let i=0;i<n.length;i++){const r=n[i];r.id=generateId();r.position.x+=100;r.position.y+=100;r.position.rotation=Math.floor(Math.random()*8)-4;let u=document.createElement("div");createOrUpdateNoteElement(u,r);notesElement.insertBefore(u,notesElement.firstChild);t.push(u)}t.length>0&&updateNoteElementsToServer(t)}}else if(n.key!=="Alt"&&n.key!=="Control"&&n.key!=="F12"&&n.key!=="Tab"&&(!n.ctrlKey||n.key!=="w"&&n.key!=="r")&&(!n.shiftKey||n.key!=="s"))if(n.key==="Backspace"||n.key==="Delete")deleteAllNotesByClassFilter("selected",!0);else if(n.key==="a"&&n.ctrlKey){deSelectNotes();const n=document.getElementsByClassName("stickynote");for(let t=0;t<n.length;t++)n[t].classList.add("selected")}else n.key==="0"&&n.ctrlKey?(scale=1,notesElement.style.transform=`scale(${scale})`):n.altKey||(console.log(n),showNoteDialog())});document.getElementById("noteText").addEventListener("keyup",n=>{n.key==="Enter"&&n.ctrlKey&&document.getElementById("updateNoteSaveButton").click()});let lockResolver;if(navigator&&navigator.locks&&navigator.locks.request){console.log("Browser supports Web Locks API. Trying to prevent tab from sleeping.");const n=new Promise(n=>{lockResolver=n});navigator.locks.request("stickynotes",{mode:"shared"},()=>n)}startConnection();