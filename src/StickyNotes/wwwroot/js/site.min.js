let notesElement=document.getElementById("notes"),scale=1,isMove=!1,isResize=!1,isModalOpen=!1,currentX,currentY,endX,endY,sourceElement=undefined,selectedElement=undefined,pointers=[],pointerDiff=0,updateSend=new Date;const generateId=()=>{try{const n=window.crypto.getRandomValues(new Uint32Array(4));return n[0].toString(16)+"-"+n[1].toString(16)+"-"+n[2].toString(16)+"-"+n[3].toString(16)}catch(n){return console.log("Secure random number generation is not supported."),Math.floor(Math.random()*1e10).toString()}},getId=()=>{let n=document.location.hash.replace("#","");return n.length===0&&(n=generateId(),document.location.hash=n),n};let id=getId();console.log(id);window.addEventListener("hashchange",()=>{console.log("hashchange event occured!"),connection.invoke("Leave",id).then(function(){console.log("Leave called");id=getId();console.log(id);const n=document.getElementsByClassName("stickynote");while(n.length>0)notesElement.removeChild(n[0]);selectedElement=selectedElement=undefined;pointers=[];scale=1;isMove=!1;isResize=!1;isModalOpen=!1;connection.invoke("Join",id)}).catch(function(n){console.log("Leave error");console.log(n)})});const deSelectNotes=()=>{const n=document.getElementsByClassName("selected");while(n.length>0)n[0].classList.remove("selected")},pointerDown=n=>{pointers.push(n);currentX=n.clientX/scale;currentY=n.clientY/scale;const t=n.srcElement.offsetWidth,i=n.srcElement.offsetHeight;deSelectNotes();selectedElement=sourceElement=n.srcElement;sourceElement.className="stickynote selected";isResize=n.offsetX>=t*.7&&n.offsetY>=i*.7;n.stopPropagation()},updateNoteMove=n=>{const t=Math.floor(n.style.left.replace("px","")),i=Math.floor(n.style.top.replace("px","")),r=Math.floor(n.style.width.replace("px","")),u=Math.floor(n.style.height.replace("px","")),f=Math.floor(n.style.transform.replace("rotateZ(","").replace("deg)",""));console.log(`${t},${i}`);let e={id:n.id,text:n.innerText,color:n.style.backgroundColor,position:{x:t,y:i,rotation:f},width:r,height:u};connection.invoke("UpdateNote",id,e).then(function(){console.log("updateNoteMove called")}).catch(function(n){console.log("updateNoteMove error");console.log(n)})},pointerMove=n=>{n.stopPropagation();const t=n.clientX/scale,i=n.clientY/scale;for(let t=0;t<pointers.length;t++)if(pointers[t].pointerId==n.pointerId){pointers[t]=n;break}if(pointers.length>1){if(console.log("handle gesture: "+pointers.length),pointers.length===2){const n=Math.abs(pointers[0].clientX-pointers[1].clientX),t=Math.abs(pointers[0].clientY-pointers[1].clientY),i=Math.sqrt(n*n+t*t);if(pointerDiff>0){const n=pointerDiff-i;scale+=n*-.001;scale=Math.min(Math.max(.1,scale),10);notesElement.style.transform=`scale(${scale})`}pointerDiff=i}return}if(sourceElement===undefined){if(isMove){endX=currentX-t;endY=currentY-i;currentX=n.clientX;currentY=n.clientY;const r=document.getElementsByClassName("stickynote");for(let n=0;n<r.length;n++){const t=r[n];t.style.left=`${t.offsetLeft-endX}px`;t.style.top=`${t.offsetTop-endY}px`}}return}if(endX=currentX-n.clientX,endY=currentY-n.clientY,currentX=n.clientX,currentY=n.clientY,isResize){const n=Math.floor(sourceElement.style.width.replace("px","")),t=Math.floor(sourceElement.style.height.replace("px",""));sourceElement.style.width=`${n-endX}px`;sourceElement.style.height=`${t-endY}px`}else console.log(n),console.log(sourceElement),sourceElement.style.left=`${sourceElement.offsetLeft-endX}px`,sourceElement.style.top=`${sourceElement.offsetTop-endY}px`;new Date-updateSend>80&&(updateNoteMove(sourceElement),updateSend=new Date)},pointerUp=n=>{isMove=!1;for(let t=0;t<pointers.length;t++){const i=pointers[t];if(i.pointerId==n.pointerId){pointers.splice(t,1);break}}sourceElement!==undefined&&updateNoteMove(sourceElement);sourceElement=undefined;n.stopPropagation()};window.addEventListener("pointermove",pointerMove,{passive:!0});window.addEventListener("pointerup",pointerUp);window.addEventListener("wheel",n=>{scale+=n.deltaY*-.001,scale=Math.min(Math.max(.1,scale),10),notesElement.style.transform=`scale(${scale})`});let protocol=new signalR.JsonHubProtocol,hubRoute="Notes",connection=(new signalR.HubConnectionBuilder).withUrl(hubRoute).withAutomaticReconnect().withHubProtocol(protocol).build();const editNoteMenu=(n,t)=>{const i=document.getElementById("colorModal"),r=document.getElementById("noteText"),u=document.getElementById("noteColor"),f=document.getElementById("updateNoteSaveButton"),e=()=>{h.hide(),t.text=n.innerText=r.value,t.color=n.style.backgroundColor=u.value,connection.invoke("UpdateNote",id,t)},o=()=>{isModalOpen=!0,r.focus()},s=()=>{isModalOpen=!1,f.removeEventListener("click",e),i.removeEventListener("shown.bs.modal",o),i.removeEventListener("hidden.bs.modal",s)};f.addEventListener("click",e);i.addEventListener("shown.bs.modal",o);i.addEventListener("hidden.bs.modal",s);r.value=t.text;u.value=t.color;const h=new bootstrap.Modal(i);h.show()},createOrUpdateNoteElement=(n,t)=>{n.id=t.id,n.innerText=t.text,n.className="stickynote",n.style.backgroundColor=t.color,n.style.left=`${t.position.x}px`,n.style.top=`${t.position.y}px`,n.style.transform=`rotateZ(${t.position.rotation}deg)`,n.style.width=`${t.width}px`,n.style.height=`${t.height}px`,n.addEventListener("pointerdown",pointerDown,{passive:!0}),n.addEventListener("dblclick",()=>{pointers=[],editNoteMenu(n,t)}),n.addEventListener("contextmenu",i=>{pointers=[];i.preventDefault();i.stopPropagation();isModalOpen=!0;const r=document.getElementById("noteMenuModal"),f=document.getElementById("noteMenuEditNote"),e=document.getElementById("noteMenuDeleteNote");let o=!1;const s=()=>{u.hide(),o=!0,isModalOpen=!1,editNoteMenu(n,t)},h=()=>{u.hide(),console.log(t.id),confirm("Do you really want to delete this note?")&&(connection.invoke("DeleteNote",id,t.id).then(function(){console.log("DeleteNote called")}).catch(function(n){console.log("DeleteNote error");console.log(n)}),notesElement.removeChild(n))},c=()=>{o||(isModalOpen=!1),f.removeEventListener("click",s),e.removeEventListener("click",h),r.removeEventListener("hidden.bs.modal",c)};f.addEventListener("click",s);e.addEventListener("click",h);r.addEventListener("hidden.bs.modal",c);const u=new bootstrap.Modal(r);u.show()})},addNote=(n,t)=>{let i={id:generateId(),text:n,color:t,position:{x:100,y:100,rotation:Math.floor(Math.random()*8)-4},width:100,height:100},r=document.createElement("div");createOrUpdateNoteElement(r,i);notesElement.insertBefore(r,notesElement.firstChild);console.log("Calling UpdateNote:");console.log(i);connection.invoke("UpdateNote",id,i).then(function(){console.log("UpdateNote called")}).catch(function(n){console.log("UpdateNote error");console.log(n)})},deleteAllNotesByClassFilter=n=>{const t=document.getElementsByClassName(n);while(t.length>0)connection.invoke("DeleteNote",id,t[0].id).then(function(){console.log("DeleteNote called")}).catch(function(n){console.log("DeleteNote error");console.log(n)}),notesElement.removeChild(t[0]);selectedElement=undefined},showNoteDialog=()=>{if(isMove=!1,pointers=[],!isModalOpen){isModalOpen=!0;const t=document.getElementById("colorModal"),n=document.getElementById("noteText"),i=document.getElementById("noteColor"),r=document.getElementById("updateNoteSaveButton");n.value="";i.value="lightyellow";const u=()=>{n.value.length!==0?(addNote(n.value,i.value),n.value="",i.value="lightyellow",n.focus()):o.hide()},f=()=>{n.focus()},e=()=>{isModalOpen=!1,r.removeEventListener("click",u),t.removeEventListener("shown.bs.modal",f),t.removeEventListener("hidden.bs.modal",e)};r.addEventListener("click",u);t.addEventListener("shown.bs.modal",f);t.addEventListener("hidden.bs.modal",e);const o=new bootstrap.Modal(t);o.show()}};window.addEventListener("focus",()=>{});window.addEventListener("blur",()=>{});window.addEventListener("pointerdown",n=>{deSelectNotes(),pointerDiff=0,pointers.push(n),currentX=n.clientX,currentY=n.clientY,isMove=!0});window.addEventListener("contextmenu",n=>{if(n.preventDefault(),sourceElement===undefined){isModalOpen=!0;const n=document.getElementById("menuModal"),i=document.getElementById("menuAddNotes"),r=document.getElementById("menuRemoveAllNotes");let u=!1;const f=()=>{t.hide(),u=!0,isModalOpen=!1,showNoteDialog()},e=()=>{t.hide(),confirm("Do you really want to delete all notes?")&&deleteAllNotesByClassFilter("stickynote")},o=()=>{u||(isModalOpen=!1),i.removeEventListener("click",f),r.removeEventListener("click",e),n.removeEventListener("hidden.bs.modal",o)};i.addEventListener("click",f);r.addEventListener("click",e);n.addEventListener("hidden.bs.modal",o);const t=new bootstrap.Modal(n);t.show()}});connection.on("notes",function(n){let t="Date received: "+(new Date).toLocaleTimeString();t+="\n"+n.body;addMessage(t)});connection.onclose(function(n){n?addMessage("Connection closed with error: "+n):addMessage("Disconnected")});connection.start().then(function(){connection.invoke("Join",id)}).catch(function(n){addMessage(n)});connection.on("AllNotes",n=>{console.log("Notes:");console.log(n);deleteAllNotesByClassFilter("stickynote");let t=9999999999,r=-9999999999,i=9999999999,u=-9999999999;for(let f=0;f<n.length;f++){const e=n[f];e.position.x<t?t=e.position.x:e.position.x+e.width>r&&(r=e.position.x+e.width);e.position.y<i?i=e.position.y:e.position.y+e.height>u&&(u=e.position.y+e.height)}for(let r=0;r<n.length;r++){const u=n[r];u.position.x=u.position.x-t+10;u.position.y=u.position.y-i+10;const f=document.createElement("div");createOrUpdateNoteElement(f,u);notesElement.insertBefore(f,notesElement.firstChild)}const f=Math.abs(r-t-20),e=Math.abs(u-i-20),o=document.documentElement.clientWidth/f,s=document.documentElement.clientHeight/e;scale=Math.min(o,s);console.log(scale);notesElement.style.transform=`scale(${scale})`});connection.on("UpdateNote",n=>{console.log("UpdateNote:");console.log(n);let t=document.getElementById(n.id);t===undefined||t==null?(t=document.createElement("div"),createOrUpdateNoteElement(t,n),notesElement.insertBefore(t,notesElement.firstChild)):createOrUpdateNoteElement(t,n)});connection.on("DeleteNote",n=>{console.log("DeleteNote:");console.log(n);const t=document.getElementById(n);t&&notesElement.removeChild(t)});document.addEventListener("keyup",n=>{if(n.key==="Escape")deSelectNotes(),selectedElement=undefined;else if(n.key!=="Alt"&&n.key!=="Control"&&n.key!=="F12"&&n.key!=="Tab")if(n.key==="Backspace"||n.key==="Delete")deleteAllNotesByClassFilter("selected");else if(n.key==="a"&&n.ctrlKey){deSelectNotes();const n=document.getElementsByClassName("stickynote");for(let t=0;t<n.length;t++)n[t].classList.add("selected")}else n.key==="0"&&n.ctrlKey?(scale=1,notesElement.style.transform=`scale(${scale})`):n.altKey||(console.log(n),showNoteDialog())});