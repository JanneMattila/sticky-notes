function showHelp(){document.getElementById("helpOpen").style.display="none";document.getElementById("helpClose").style.display="";document.getElementById("help").style.display=""}function hideHelp(){document.getElementById("helpOpen").style.display="";document.getElementById("helpClose").style.display="none";document.getElementById("help").style.display="none"}let notesElement=document.getElementById("notes"),protocol=new signalR.JsonHubProtocol,hubRoute="Notes",connection=(new signalR.HubConnectionBuilder).withUrl(hubRoute).withAutomaticReconnect().withHubProtocol(protocol).build();const addNote=n=>{console.log(n);let t=document.createElement("pre");t.innerText=n;notesElement.insertBefore(t,notesElement.firstChild)},showNoteDialog=()=>{for(;;){let n=prompt("Add note");if(n!==undefined||n.length===0)break;addNote(n)}};window.addEventListener("focus",()=>{});window.addEventListener("blur",()=>{});window.addEventListener("contextmenu",n=>{n.preventDefault(),showNoteDialog()});connection.on("notes",function(n){let t="Date received: "+(new Date).toLocaleTimeString();t+="\n"+n.body;addMessage(t)});connection.onclose(function(n){n?addMessage("Connection closed with error: "+n):addMessage("Disconnected")});connection.start().then(function(){}).catch(function(n){addMessage(n)});document.addEventListener("keyup",n=>{n.keyCode===27?(hideHelp(),isAddOpen=!1):showNoteDialog()});