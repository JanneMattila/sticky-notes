function showHelp(){document.getElementById("helpOpen").style.display="none";document.getElementById("helpClose").style.display="";document.getElementById("help").style.display=""}function hideHelp(){document.getElementById("helpOpen").style.display="";document.getElementById("helpClose").style.display="none";document.getElementById("help").style.display="none"}let notesElement=document.getElementById("notes"),isMove=!1,isResize=!1,currentX,currentY,endX,endY,sourceElement=undefined,selectedElement=undefined;const deSelectNotes=()=>{const n=document.getElementsByClassName("selected");while(n.length>0)n.item(0).classList.remove("selected")},pointerDown=n=>{currentX=n.clientX;currentY=n.clientY;const t=n.srcElement.offsetWidth,i=n.srcElement.offsetHeight;deSelectNotes();selectedElement=sourceElement=n.srcElement;sourceElement.className="stickynote selected";isResize=n.offsetX>=t*.7&&n.offsetY>=i*.7;n.stopPropagation()},pointerMove=n=>{if(n.stopPropagation(),sourceElement===undefined){if(isMove){endX=currentX-n.clientX;endY=currentY-n.clientY;currentX=n.clientX;currentY=n.clientY;const t=document.getElementsByClassName("stickynote");for(let n=0;n<t.length;n++){const i=t[n];i.style.top=`${i.offsetTop-endY}px`;i.style.left=`${i.offsetLeft-endX}px`}}return}if(endX=currentX-n.clientX,endY=currentY-n.clientY,currentX=n.clientX,currentY=n.clientY,isResize){const n=Math.floor(sourceElement.style.width.replace("px","")),t=Math.floor(sourceElement.style.height.replace("px",""));sourceElement.style.width=`${n-endX}px`;sourceElement.style.height=`${t-endY}px`}else sourceElement.style.top=`${sourceElement.offsetTop-endY}px`,sourceElement.style.left=`${sourceElement.offsetLeft-endX}px`},pointerUp=n=>{isMove=!1,sourceElement=undefined,n.stopPropagation()};window.addEventListener("pointermove",pointerMove,{passive:!0});window.addEventListener("pointerup",pointerUp);let protocol=new signalR.JsonHubProtocol,hubRoute="Notes",connection=(new signalR.HubConnectionBuilder).withUrl(hubRoute).withAutomaticReconnect().withHubProtocol(protocol).build();const addNote=n=>{let t=document.createElement("div");t.innerText=n;t.className="stickynote";t.style.width="100px";t.style.height="100px";t.style.transform=`rotateZ(${Math.floor(Math.random()*8)-4}deg)`;t.addEventListener("pointerdown",pointerDown,{passive:!0});t.addEventListener("dblclick",()=>{let n=prompt("Add note",t.innerText);n!==undefined&&n!=null&&n.length!==0&&(t.innerText=n)});t.addEventListener("contextmenu",n=>{n.preventDefault(),n.stopPropagation(),console.log("element contextmenu")});notesElement.insertBefore(t,notesElement.firstChild)},showNoteDialog=()=>{for(isMove=!1;;){let n=prompt("Add note");if(n===undefined||n==null||n.length===0)break;addNote(n)}};window.addEventListener("focus",()=>{});window.addEventListener("blur",()=>{});window.addEventListener("pointerdown",n=>{deSelectNotes(),currentX=n.clientX,currentY=n.clientY,isMove=!0});window.addEventListener("contextmenu",n=>{n.preventDefault(),sourceElement===undefined&&showNoteDialog()});connection.on("notes",function(n){let t="Date received: "+(new Date).toLocaleTimeString();t+="\n"+n.body;addMessage(t)});connection.onclose(function(n){n?addMessage("Connection closed with error: "+n):addMessage("Disconnected")});connection.start().then(function(){}).catch(function(n){addMessage(n)});document.addEventListener("keyup",n=>{if(n.key==="Escape")deSelectNotes(),selectedElement=undefined;else if(n.key!=="Alt"&&n.key!=="Control"&&n.key!=="F12"&&n.key!=="Tab")if(n.key==="Backspace"||n.key==="Delete"){const n=document.getElementsByClassName("selected");while(n.length>0)notesElement.removeChild(n[0]);selectedElement=undefined}else if(n.key==="a"&&n.ctrlKey){deSelectNotes();const n=document.getElementsByClassName("stickynote");for(let t=0;t<n.length;t++)n[t].classList.add("selected")}else n.altKey||(console.log(n),showNoteDialog())});